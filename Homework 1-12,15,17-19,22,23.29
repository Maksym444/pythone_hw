import math
1.
a=10.2
b=20.2
c=30.9
r=(a+b*(c/2))
print(round(r,1))

2.
a=10.2
b=20.2
r=(math.pow(a,2)+math.pow(b,2))%2
print(round(r,1))

a=10.2
b=20.2
r =(a**2+b**2)%2
print (r)

3.
a=10.2
b=20.2
c=30.9
r= (a + b) /12 *c%4 +b
print(round(r,1))
print(r)

4.
a=10.2
b=20.2
c=30.9
r= (a -b * c) / (a+b) %c
print(round(r,1))
print(r)

5.
a=10.2
b=20.2
c=30.9
r= math.fabs(a - b) // math.pow(a+b,3) - math.cos(c)
print(round(r,1))
print(r)

6.
a=10.2
b=20.2
c=30.9
z=(math.log (1+c)// -b)**4+a
print(round(z,4))

a=10.2
b=20.2
c=30.9
z= (math.log(1+c)//-b)
r=z**4+math.fabs(a)
print (r)

7.
def usa2euro(S1,S2,S3):
    return a,b
data= input('Введите дату в европейском формате:')
S1=data[:3];S2=data[3:6];S3=data[6:]
a=S2+S1+S3 #американское
b=S1+S2+S3 #европейское
result=usa2euro(S1,S2,S3)
print (result)

def euro2usa(S1,S2,S3):
    return c
data= input('Введите дату в европейском формате:')
S1=data[:3];S2=data[3:6];S3=data[6:]
c=S2+S1+S3 #американское
result=euro2usa(S1,S2,S3)
print (result)

8. Я
def mix(S1,S2,S3):
    result1=S2+S1+S3
    result2=S4+S5+S6
    return result1,result2
stroka="abcd"; stroka1="efgh"
S1=stroka[0:];S2=stroka1[0:2];S3=stroka1[2:]
S5=S2+S1+S3;S4=stroka[0:2];S6=stroka[2:]
result=mix(S1,S2,S3)
print (result)

# Не я, но я.
import math
def in_middle(string1, string2):
    result=string2[:math.floor(len(string2)/2)] + string1+ string2[math.floor(len(string2)/2):]
    return result
string1= input ('Введите строку1:')
string2= input('Введите строку2:')
result1=in_middle(string1,string2)
result=in_middle(result1,string1)
print (result1,result)

9.
def grad2rad(angle):
    return angle * math.pi / 180
    #return math.radians(angle)
angle=grad2rad(int(input("Введите число: ")))
result=math.cos(angle)
print(math.cos(result),'\t%f' %angle)

import math
def grad2rad1(angle):
    return angle * math.pi / 180
    #
angle1 = grad2rad(60)
result1 = math.cos(angle1)
print(math.cos(result1),'\t%s' %angle1)
angle2 = grad2rad1(45)
result2 = math.cos(angle2)
print(math.cos(result2),'\t%s' %angle2)
angle3 = grad2rad(40)
result3 = math.cos(angle3)
print(math.cos(result3),'\t%s' %angle3)

10.
a = int(input("Введите трехзначное число: "))
def sum_num (a):
    num1 = a % 10
    num2 = a % 100 // 10
    num3 = a // 100
    return num1+num2+num3
print("Сумма цифр числа:",sum_num(a))
__________________________________________________________
n = int(input("Введите трехзначное число: "))
def summa (n):
  d1 = n % 10
  n = n // 10
  d2 = n % 10
  n = n // 10
  d3 = n % 10
  return d1+d2+d3
print("Сумма цифр числа:", summa(n))

11.
a=float(input('Введите длину первого катета:'))
b =float(input('Введите длину второго катета:'))
def peri_metr_ploshad(a,b):
    Perimetr= a+b+math.sqrt(a*a+b*b)
    Ploshad= a*b/2
    return (round(Perimetr,3),round(Ploshad,3))
print(peri_metr_ploshad(a,b))

12.
num=int(input("Введите число для проверки:"))
def chetnoe_chislo(num):
    if num % 2 == 0:
        print('Четное число')
    elif num % 2 != 0:
        print('Нечетное число')
print(chetnoe_chislo(num))

num=int(input("Введите число для проверки:"))
def chetnoe_chislo(num):
 return (num % 2) == 0 #четное
 #return (num % 2) != 0 #нечетное
print (chetnoe_chislo(num))



15.
import math
a = float(int(5))
b = float(int(4))
c = float(int(2))
def discr_2(discr):
    result=b ** 2 - 4 * a * c
    return result
x=discr_2(discr_2)
print("Дискриминант D = %.2f" % discr_2(discr_2))
if x > 0:
    x1 = (-b + math.sqrt(discr_2)) / (2 * a)
    x2 = (-b - math.sqrt(discr_2)) / (2 * a)
    print("x1 = %.2f \nx2 = %.2f" % (x1, x2))
elif discr_2 == 0:
    x = -b / (2 * a)
    print("x = %.2f" % x)
else:
    print("Корней нет")


17.
def fac(n):
    if n == 0:
        return 1
    return fac(n - 1) * n
result= (fac(5))
print (result)


18.
import random
def bigg_num(number):
    number=[0]
    digit1=random.randint(0,999999999999)
    number=digit1
    max_num = max([int(i) for i in str(number)])
    # print (number)
    # print (max_num)
    return (number, max_num)
print (bigg_num(0))

19. 
import math
n = int(100)
lst=[]
for i in range(2, n+1):
    for a in lst:
        if a > int((math.sqrt(i)) + 1):
            lst.append(i)
            break
        if (i % a == 0):
            break
    else:
        lst.append(i)
print (lst)


22.
import random
def chooose ():
    x=random.randint(1,10)
    print(x)
    while True:
        y= int(input("Number:"))
        if y>10:
            print("Казна полна, Милорд!")
            continue
        if y<-1:
            print("Казна пуста, Милорд!")
            continue
        if  y<x:
           print("Нужно больше золота, Милорд!")
        elif y>x:
            print("Нужно меньше, Милорд!")
        else:
            print("За Короля!!!")
            break
chooose()

23. Variant 1 
import math
import random
simple_list=[0]*2
def print_list(lst):
    for i in range(0,len(lst)):
         print("Element of the list is equal to", lst[i])
def fill_random_list(lst):
    for i in range(0, len(lst)):
        random_num = random.randint(0, 100)
        lst[i] = random_num
def find_average_from_list(lst):
    s=0
    for i in lst:
        s += i
    return s/len(lst)
fill_random_list(simple_list)
print_list(simple_list)
result = find_average_from_list(simple_list)
print (result)


23. Variant 2
import random
def print_list(lst):
    print("Element of the list is equal to", end=' ')
    for i in lst:
        print(i, end=' ')

def find_average_from_list(lst):
    s = 0
    for number in lst:
        s += number
    return s/len(lst)

rand_list = [random.randint(0, 100) for _ in range(10)]
print_list(rand_list)
result = find_average_from_list(rand_list)
print('\n')
print(result)


29. 
import string
import random
def generate_password(pass_len=8):
    all_sym = string.ascii_letters + string.digits + '_'
    while True:
        password = ''
        lowercase = 0
        uppercase = 0
        ints = 0
        for i in range(pass_len):
            _ = all_sym[random.randint(0, len(all_sym)-1)]
            password += _
            if _ in string.ascii_lowercase:
                lowercase += 1
            elif _ in string.ascii_uppercase:
                uppercase += 1
            elif _ in string.digits:
                ints += 1
        if lowercase and uppercase and ints:
            return password

print(generate_password(8))
print(generate_password(8))
print(generate_password(8))
print(generate_password(8))
print(generate_password(8))
